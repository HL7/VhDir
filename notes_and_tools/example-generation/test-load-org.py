import fhir_example_templates2 as f_templ
import rR_dict as rr
import name_generator as names
import taxonomy_codes as t
import csv
from json import dumps, loads, load
from stringcase import spinalcase, titlecase, snakecase
from fhirr4models import bundle as B
from fhirr4models import practitioner as P
from fhirr4models import organization as O

from pprint import pformat, pprint

import os, sys, logging
logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s - %(message)s')
logging.debug('Start of program')

#***********Globals******************

in_path ='/Users/ehaas/Documents/FHIR/VhDir/notes_and_tools/example-generation/sample-nppes-data'
out_path = '/Users/ehaas/Documents/FHIR/VhDir/notes_and_tools/example-generation/examples'
server_path = 'http://vhdir-demo.fhir.org/fhir'
org_file = '20181206-small/organization/vhdr-organization-example-bundle'

western_ma_zips = ['01101','01152','01144','01103','01102','01111','01115','01138','01139','01199','01105','01090','01107','01104','01089','01109','01108','01001','01014','01021','01013','01118','01106','01119','01030','01116','01020','01151','01129','01128','01028','01022','01041','01086','01040','06078','06080','06082','01095','06083','01056','01036','01085','01077','06093','06072','01075','01073','06071','01033','01080','06096','06026','01071','06016','06088','01027','06035','06064','01009','01057','06060','01097','01063','01079','01061','01007','01060','01069','01062','06081','06029','06090','06095','01035','06006','06027','06028','06075','01034','01053','06074','06002','01004','01059','06077','01081','01008','01050','01038','06076','06084','01088','06066','06070','01002','01003','01010','06059','01092','06091','01082','06092','01066','01012','06042','01083','01039','06104','06199','06089','06120','01521','06020','06112','06128','06101','06279','01011','06108','06063','06065','06265','06041','06045','01093','06019','06105','01029','06115','01585','06152','06103','06183','06040','06123','06126','06127','06129','06131','06132','06134','06140','06141','06142','06143','06144','06145','06146','06147','06150','06151','06153','06154','06155','06156','06160','06161','06167','06176','06180','06117','06138','01084','01096','06102','06119','06118','06061','01518','06043','01373','01375','06133','06106','06001','06114','06107','06251','01506','01054','01253','01072','01355','06238','01098','01566','01243','06110','06022','01255','01032','06021','01031','06278','06269','06098','06057','01037','06268','06033','01531','06232','01026','06109','01341','06025','01550','01535','06032','06085','01094','01515','06030','06034','06242','06282','06111','01342','06250','06013','06053','06248','01366','01244','01508','01351','01330','06094','01245','01223','06067','01347','06051','01235','06281','01264','06073','01074','01509','01507','06050','01379','06237','06235','06058','01562','06062','06052','06790','01068','01259','01349','06244','01070','06447','06792','01005','01302','01238','01376','06262','06791','01571','06010','06226','06245','01338','06256','06023','06416','06230','06267','01380','06231','01370','06011','06480','06259','06258','01542','06024','01344','06037','06247','01524','06781','06018','01301','01270','01537','01260','06255','06280','01242','01612','01222','01354','06246','06266','06756','06414','06786','06474','06489','06249','01543','01230','01331','06778','01226','06456','01611','06459','06031','06264','01540','06424','06457','06782','01570','01227','01364','06137','01240','06277','01501','01339','01263','01257','01360','01262','06479','01603','06234','01452','06481','01256','06263','06759','01340','06716','01229','01602','06260','06787','06467','06450','01337','01346','01468','01202','01203','06415','06451','01378','06233','01586','06254','06455','01520','01609','01224','06444','06796','01610','06241','01522','01236','06753','06330','06469','01266','06336','01225','01608','06350','01601','01613','01614','01615','01653','01655','06331','01607','01527','06704','06068','06763','01343','01438','01605','01436','06750','06795','06079','06779','06387','01590','01201','06705','01516','01606','06710','01252','01541','01526','01254','01604','06039','06332','01368','06702','06239','06334','01367','01258','06441','06410','06701','06703','06720','06721','06722','06723','06724','06725','06726','06749','06758','06243','01441','06422','06408','06411','01220','06423','06754','06389','06438','06706','06751','06383','06708','01583','01237','06374','01440','06495','02859','06420','06492','06712','12017','06069','06494','06493','06360','05354','01350','06380','05358','12517','01545','01473','01546','01536','01560','12029','02824','06777','01519','01475','06354','05342','03451','01247','01588','01564','06377','06762','06439','01505','06793','03441','12165','06794','12125','06770','02814','06412','01525','05361','03470','06798','06370','01534','01569','01538','12516','12529','06351','02858','12546','02830','01267','06518','02826','06757','12060','06382','06419','06373','02839','12168','06353','12503','01510','01568','06472','03447','01453','06524','02825','06365','01430','12037','12195','06417','05302','05303','05304','01532','05350','06473','05344','01581','06403','01561','01420','05301','06785','02876','06783','01529','06443','02857','06442','12040','02827','06409','01503','05352','06437','02815','06426','06371','12501','02829','06384','12169','06335','06333','06514','01784','06471','12136','01523','12075','01756','12022','12592','03469','03446','12521','12502','12565','03465','06375','01747','06517','06478','03461','03443','03466','12024','12062','02896','01504','06488','05363','01757','06338','12567','06339','01748','06776','03462','01431','06487','12530','06755','06498','06349','01740','12544','01462','02828','06413','01772','01467','06525','06483','01752','05261','06513','06385','06752','06475','02917','05357','12115','02895','06515','02816','12513','03452','06357','02831','06359','06511','01749','01745','06501','06502','06503','06505','06506','06507','06508','06509','06520','06521','06530','06531','06532','06533','06534','06535','06536','06537','06538','06540','06510','06405','02019','05362','12581','12594','06401','03071','12184','06784','06504','05351','02817','12153','06320','06491','12506','12522','06512','01434','01474','01451','12132','02838','12138','12123','01464','02919','06376','02873','06519','01721','06482','12534','06340','12130','06418','05341','03435','03455','05260','01746','01469','02802','12523','06372','12018','02823','12172','12545','12106','06804','06355','02053','01472','01775','01702','12174','02911','02921','06516','03467','12541','02833','03444','02864','02865','06440','02038','12050','06484','02832','06378','06388','01719','01432','06477','06404','12063','01701','06470','12514','01703','01704','01705','03048','02070','05356','02822','05201','06468','02904']

hartford_zips = ['06101','06120','06199','06104','06115','06103','06152','06183','06123','06126','06127','06129','06131','06132','06134','06140','06141','06142','06143','06144','06145','06146','06147','06150','06151','06153','06154','06155','06156','06160','06161','06167','06176','06180','06112','06105','06108','06102','06128','06138','06106','06114','06133','06118','06119','06006','06117','06110','06107','06028','06095','06074','06109','06002','06042','06041','06045','06040','06111','06033','06064','06067','06025','06088','06089','06053','06032','06096','06051','06030','06034','06001','06070','06081','06016','06050','06073','06066','06052','06092','06026','06043','06085','06023','06416','06062','06480','06037','06020','06083','06080','06019','06035','06078','06447','06022','06248','06082','06029','06093','06232','06013']


def get_zip(postal_code):  # get 5 digit code include leading 0
  if len(postal_code) <= 5:
    return postal_code
  else:
    return postal_code[:-4]


def get_bundle(in_path, in_file):  # as python model
    with open(f'{in_path}/{in_file}.json') as f:
        logging.info(f'reading file = {in_file}')
        return B.Bundle(load(f))

orgs = get_bundle(out_path,org_file)

print('NAME = ' + next(str(entry.resource) for entry in orgs.entry if entry.resource.name == 'VASSAR HEALTH CONNECTICUT, INC.' ))
i = 0
j = 0
k = 0
for entry in orgs.entry:
    print(entry)
    print(entry.resource)
    print(entry.resource.resource_type)
    print(entry.resource.id)
    print(entry.resource.telecom[0].as_json())

    print(entry.resource.address[0].postalCode)
    z = get_zip(entry.resource.address[0].postalCode)
    if z in western_ma_zips:
        i = i + 1
    if z in hartford_zips:
        j = j + 1
    s = get_zip(entry.resource.address[0].state)
    if s == "RI":
        k = k +1


print(i, j ,k)
